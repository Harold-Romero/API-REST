package com.haromerop.crudApi.ApiRestCrud.controller;

import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.haromerop.crudApi.ApiRestCrud.service.UserLoginService;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;

@Api(value = "{userlogin.controller.api}", tags = "{userlogin.controller.api}")
@RestController
@RequestMapping("/create_auth")
public class UserLoginController {
	
	private final UserLoginService userLoginService;
	
	@ApiOperation(value = "{userlogin.controller.apioperation.create}", response = ResponseEntity.class, tags = "{userlogin.controller.apioperation.tags.create}")
	@ApiResponses(value = {
			@ApiResponse(code = 200, message = "{user.controller.response.200}"),
			@ApiResponse(code = 401, message = "{user.controller.response.401}"),
			@ApiResponse(code = 403, message = "{user.controller.response.403}"),
			@ApiResponse(code = 404, message = "{user.controller.response.404}")
	})
}
/*
 * @ApiOperation(value = "{user.controller.apioperation.create}", response = ResponseEntity.class, tags = "{user.controller.apioperation.tags.create}")
	@ApiResponses(value={
			@ApiResponse(code = 200, message = "{user.controller.response.200}"),
			@ApiResponse(code = 401, message = "{user.controller.response.401}"),
			@ApiResponse(code = 403, message = "{user.controller.response.403}"),
			@ApiResponse(code = 404, message = "{user.controller.response.404}")
	})
	@PostMapping
	public ResponseEntity<Usuario> createUsuario(@Valid @RequestBody UsuarioRequest usuario) throws ApiUnprocessableEntity{
		return ResponseEntity.ok().body(this.usuarioService.createUsuario(usuario));
	}*/